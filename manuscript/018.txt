## Variables in Ruby

A lot of stuff is going on, we hope you're not too overwhelmed too much with information about the right way of running your Ruby program. Let's jump to something fun.

Variables. Variable is a place inside of your computer's memory where we can store a value. It's like a cell in honeycomb. One wonders why do wee need to store a value? Well, because we can read it later, or we can modify it later, it's convenient.

But we are not obligated to modify the values of our variables. Sometimes we can introduce some variables to improve readability of our program. Often such variables named as constants, because we don't modify them! That's why in modern JavaScript programming language we have two keywords: `let` to declare variable, and `const` to introduce a constant, something you can't change in the future. But it's much easier in Ruby.

Let's try to define (declare, create, make) simple variable:

{lang=ruby, line-numbers=on}
```ruby
puts "Your age?"
age = gets
puts "Your age is"
puts age  
```

Program above will ask for the age. When age was provided, it will print out the age back to the screen:

```
Your age?
20
Your age is
20
```

Number we typed stored in variable with the name `age`. We could name it any way we want, for example `a`. But in this case on line 4 will look like `puts a`. When it comes to naming variables, there are some important naming conventions out there, search for "naming conventions for variables in Ruby".

In Ruby and JavaScript we'll see three naming conventions:

* Snake case