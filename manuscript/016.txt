## Text Editors

There is plenty of text editors out there for all operating systems: MacOS, Linux, Windows, but we'll be discussing only _code_ editors. What's the difference between text editors and code editors? Well, often text editors do not save the file in plain format. For example, Microsoft Word saves the file along with meta information like formatting, font settings, images, and so on. But our code should be "plain".

In other words, what we type on keyboard should be saved to file. You are already familiar with minimalistic code editor:

```
$ cat > app.rb
puts "Hello"
```

Type anything from your keyboard and press Ctrl+D (sometimes you need to press Ctrl+D twice). Everything you typed will be saved to `app.rb`. Note that contents of `app.rb` will be replaced in this case, and if you need to _add_ data to the end of file, you need to use `>>` instead of just `>`.

Now you can see what was written to this file the following way:

```
$ cat app.rb
puts "Hello"
```

You can also look at hexadecimal output, followed by raw data:

```
$ cat app.rb | hexdump -C
00000000  70 75 74 73 20 22 48 65  6c 6c 6f 22 0a           |puts "Hello".|
0000000d
```

Similar output can be achieved via Far Manager: select the file, press F3, and then toggle hex view with F4:

![Raw contents of app.rb (Far Manager view)](images/016-raw-file.png)

But dealing with raw `cat` command is hard. Once you pressed Enter, there is no way to go back and make changes. You can't use left and right arrow keys to navigate your program. And nobody is using `cat` command for writing programs (except maybe for the purpose of showing your excellence on interview).

There are many convenient code editors that were designed to edit code and help a programmer. If editor is simple, it can be used for both editing text and code. Nano is one of the easiest code/text editors and installed on almost any operating system (except Windows):

```
$ nano app.rb
```

![Nano editor, works right in your terminal](images/016-nano.png)

Footer has hints for available commands. For example, you can quit Nano by pressing Ctrl+X. There are much more advanced code editors like Vim and Emacs. Unfortunately, more advanced editors require more time to capture their functionality. You will probably see many "holy wars" on Internet about picking the right code editor. However, picking the right editor itself won't help you acquiring computer language knowledge and programming skills. So it's not very important which code editor you'll be using.

Code editors like cat, nano, vim, emacs are all _console_ editors. It means you run the command from your terminal and you don't need to quit the terminal. It's just a text on your screen. They're quite useful when you work with remote machines. For example, you've logged in to the server and want to edit or view some files. You can do that without quitting the terminal.

But on your own machine you're free to run any programs. And there are some code editors with graphic elements (like icons, different font styles, colors, and so on). Often these editors offer much more possibilities (like live error checking, debugging, bookmarks) and make a life of a programmer much easier.

